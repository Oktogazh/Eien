<div class="card shadow mb-4">
  <div class="card-header py-3">
    <h6 class="m-0 font-weight-bold text-primary" id="TLCTitle"></h6>
  </div>
  <div class="card-body">
    <div>
      <audio src="" id="audioSource" type="audio/wav">
    </div>
    <div class="player">
      <div class="tenSec fLeft" onclick="add(-10);">
        <div class="minSign"></div>
      </div>
      <div class="tenSec fRight" onclick="add(10);">
        <div class="plSign"></div>
      </div>
      <br>
      <div class="tenS"></div><br>
      <div class="paused" id="playBtn"></div> <br>
      <div class="fRight">
        <div style="background: url('/css/player/next.svg'); display: block; width: 75px; height: 75px;" onclick="nextFile()" class="fRight" id="next"></div>
      </div>
      <div class="fLeft"">
        <div style="background: url('/css/player/previous.svg'); display: block; width: 75px; height: 75px;" onclick="prevFile()" class="fRight" id="prev"></div>
      </div>
    </div>
  </div>
</div>
<!-- Card Header - Accordion -->
<div class="card shadow mb-4">
  <div  href="#collapseQuestion1" class="d-block card-header py-3 collapsed" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseCardExample">
    <h6 class="m-0 font-weight-bold text-primary"  id="TRCTitle"></h6>
  </div>
  <!-- Collapsing Answers -->
  <div class="collapse"  id="collapseQuestion1">
    <div class="card-body" id="TRCContent">
    </div>
  </div>
</div>


<script type="text/javascript">
  // Changes the title of the card following the advancement
  var folder = '<%= folder %>';
  var file = '<%= file %>';
  var audioSource = document.getElementById('audioSource');
  var playPause = document.getElementById('playBtn');

  var s, p, titleText, title, h1Text, h1;

  function setTLCTitle(file) {
    s = Math.ceil(parseInt(file) / 7);
    p = parseInt(file) % 7;
    p = (p == 0) ? 7 : p;

    if (s > 2) {
      s = `Sizhun ${s}`
    } else {
      s = `Semaine ${s}`
    }
    titleText = `${s} / Podcast ${p}`;
    title = document.getElementById('TLCTitle');
    title.innerHTML = titleText;

    //h1Text = (parseInt(file) == null)? 'Accueil' :  `Kentel ${file}`;
    //h1 = document.getElementsByTagName('h1');
    //h1[0].innerText = h1Text;
  }

  // Check if there are metadata for the next lesson, hide nextbtn when false
  function setLimits(file) {
    var prevbtn = document.getElementById('prev');
    var nextbtn = document.getElementById('next');
    var xhrLim = new XMLHttpRequest();
    var urlLim = `/meta/${folder}/` + (parseInt(file) + 1).toString();

    function removeNext() {
      nextbtn.style.display = "none";
    }

    xhrLim.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 404) {
        removeNext();
      }
    }

    xhrLim.open('GET', urlLim, true);
    xhrLim.send();

    if (file == 1) {
      prevbtn.style.display = "none";
    } else {
      prevbtn.style.display = nextbtn.style.display = "block";
    }
  }

  function chargeData(folder, file) {
    setTLCTitle(file);
    audioSource.setAttribute("src", `/deski√±/${folder}/${file}`);
    playPause.setAttribute('class', 'paused');
    setLimits(file);
  }

  window.onload = chargeData(folder, file);

  //Play&Pause button
  function switchState(x) {
    if (x) {
      audioSource.currentTime = x;
    }
    if (audioSource.paused == true) {
      audioSource.play();
      playPause.setAttribute('class', 'playing');
    } else {
      audioSource.pause();
      playPause.setAttribute('class', 'paused');
    }
  }

  function playAndPause() {

    function checkKey(e) {
      if (e.charCode == 32 ) {
        switchState();
        e.preventDefault();
      }
    }

    playPause.addEventListener('click', function() {
      switchState();
    }, false);

    window.addEventListener("keypress", checkKey, false);
  }

  function add(x) {
    audioSource.currentTime += x;
  }

  window.onload = playAndPause();

  //Previous&Next buttons
  function prevFile() {
    file = parseInt(file);
    file--;
    chargeData(folder, file);
    chargeMetaData(folder, file);
  }

  function nextFile() {
    file = parseInt(file);
    file++;
    chargeData(folder, file);
    chargeMetaData(folder, file);
  }

</script>
